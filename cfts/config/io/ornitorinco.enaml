from enaml.workbench.api import PluginManifest, Extension
from enaml.workbench.core.api import Command

import numpy as np

from psi.controller.engines.nidaq import (NIDAQEngine,
                                          NIDAQHardwareAIChannel,
                                          NIDAQHardwareAOChannel,
                                          NIDAQHardwareAOChannel4461)
from psi.controller.api import ExperimentAction, Transform
from psiaudio.calibration import FlatCalibration

from .util import connect_trigger, load_cal


def mv_to_C(mv):
    c = (mv-0.050)/0.020 + 35
    m = (c < 35) | (c > 40)
    c[m] = np.nan
    return c


START_TRIGGER = '/PXI1Slot6/ao/StartTrigger'


enamldef IOManifest(PluginManifest): manifest:

    Extension:
        id = 'ornitorinco_commands'
        point = 'enaml.workbench.core.commands'

        Command:
            id = 'ornitorinco.connect_trigger'
            handler = connect_trigger

    Extension:
        id = 'ornitorinco_actions'
        point = 'psi.controller.actions'

        ExperimentAction:
            event = 'experiment_prepare'
            command = 'ornitorinco.connect_trigger'
            weight = 90

    Extension:
        id = 'backend'
        point = 'psi.controller.io'

        NIDAQEngine:
            name = 'NI_misc'
            hw_ai_monitor_period = 0.125

            NIDAQHardwareAIChannel:
                label = 'EEG'
                name = 'eeg_channel'
                channel = 'PXI1Slot7/ai0'
                start_trigger = START_TRIGGER
                fs = 100e3
                reference_clock = 'PXI_Clk10'
                expected_range = (-10, 10)
                dtype = 'float64'
                terminal_mode = 'pseudodifferential'
                terminal_coupling = 'DC'
                unit = 'V'

            NIDAQHardwareAIChannel:
                # Output is 50 mV at 35 degrees Centigrade, 150 mV at 40
                # degrees Centigrade. 25 mV/C between 35 and 40.
                label = 'Temperature'
                name = 'temperature_channel'
                channel = 'PXI1Slot7/ai1'
                start_trigger = START_TRIGGER
                fs = 100e3
                reference_clock = 'PXI_Clk10'
                expected_range = (-10, 10)
                dtype = 'float64'
                terminal_mode = 'pseudodifferential'
                terminal_coupling = 'DC'
                unit = 'V'

                Transform:
                    name = 'temperature'
                    function = mv_to_C

        NIDAQEngine:
            name = 'NI_audio'
            master_clock = True

            hw_ai_monitor_period = 0.125
            hw_ao_monitor_period = 0.125
            hw_ao_buffer_size = 5

            NIDAQHardwareAOChannel4461:
                label = 'Starship A (primary)'
                name = 'starship_A_primary'
                channel = 'PXI1Slot6/ao0'
                fs = 100e3
                reference_clock = 'PXI_Clk10'
                expected_range = (-1, 1)
                max_range = (-1, 1)
                dtype = 'float64'
                terminal_mode = 'pseudodifferential'

            NIDAQHardwareAOChannel4461:
                label = 'Starship A (secondary)'
                name = 'starship_A_secondary'
                channel = 'PXI1Slot6/ao1'
                fs = 100e3
                reference_clock = 'PXI_Clk10'
                expected_range = (-1, 1)
                max_range = (-1, 1)
                dtype = 'float64'
                terminal_mode = 'pseudodifferential'

            NIDAQHardwareAIChannel:
                label = 'Starship A (microphone)'
                name = 'starship_A_microphone'
                channel = 'PXI1Slot6/ai1'
                start_trigger = START_TRIGGER
                fs = 100e3
                reference_clock = 'PXI_Clk10'
                expected_range = (-10, 10)
                dtype = 'float64'
                terminal_mode = 'pseudodifferential'
                terminal_coupling = 'AC'
                calibration = load_cal('CFTS_STARSHIP_A')

            NIDAQHardwareAOChannel4461:
                label = 'Starship B (primary)'
                name = 'starship_B_primary'
                channel = 'PXI1Slot8/ao0'
                fs = 100e3
                reference_clock = 'PXI_Clk10'
                expected_range = (-1, 1)
                max_range = (-1, 1)
                dtype = 'float64'
                terminal_mode = 'pseudodifferential'

            NIDAQHardwareAOChannel4461:
                label = 'Starship B (secondary)'
                name = 'starship_B_secondary'
                channel = 'PXI1Slot8/ao1'
                fs = 100e3
                reference_clock = 'PXI_Clk10'
                expected_range = (-1, 1)
                max_range = (-1, 1)
                dtype = 'float64'
                terminal_mode = 'pseudodifferential'

            NIDAQHardwareAIChannel:
                label = 'Starship B (microphone)'
                name = 'starship_B_microphone'
                channel = 'PXI1Slot8/ai1'
                start_trigger = START_TRIGGER
                fs = 100e3
                reference_clock = 'PXI_Clk10'
                expected_range = (-10, 10)
                dtype = 'float64'
                terminal_mode = 'pseudodifferential'
                terminal_coupling = 'AC'
                calibration = load_cal('CFTS_STARSHIP_B')

            NIDAQHardwareAIChannel:
                label = 'Calibration microphone'
                name = 'reference_microphone_channel'
                channel = 'PXI1Slot6/ai0'
                start_trigger = START_TRIGGER
                fs = 100e3
                reference_clock = 'PXI_Clk10'
                expected_range = (-10, 10)
                dtype = 'float64'
                terminal_mode = 'pseudodifferential'
                terminal_coupling = 'AC'
                calibration = FlatCalibration.from_mv_pa(1)
